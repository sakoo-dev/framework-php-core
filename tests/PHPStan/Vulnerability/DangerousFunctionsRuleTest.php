<?php

declare(strict_types=1);

namespace Sakoo\Framework\Core\Tests\PHPStan\Vulnerability;

use PHPStan\Rules\Rule;
use PHPUnit\Framework\Attributes\Test;
use Sakoo\Framework\Core\PHPStan\Vulnerability\DangerousFunctionsRule;
use Sakoo\Framework\Core\Tests\PHPStan\PHPStanTestCase;

/**
 * @extends RuleTestCase<DangerousFunctionsRule>
 */
final class DangerousFunctionsRuleTest extends PHPStanTestCase
{
	protected function getRule(): Rule
	{
		return new DangerousFunctionsRule();
	}

	#[Test]
	public function detects_dangerous_function_calls(): void
	{
		$errorMessage = "Usage of dangerous function '%s' detected. Consider alternatives.";

		$this->analyse([__DIR__ . '/Stub.php'], [
			[sprintf($errorMessage, 'exec'), 5],
			[sprintf($errorMessage, 'shell_exec'), 6],
		]);
	}
}
